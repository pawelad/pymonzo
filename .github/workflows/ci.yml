---
name: "CI"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_call:
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHON_VERSION: "3.11"

jobs:
  tests:
    name: "Tests"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - name: "Setup Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: "Update pip and wheel"
        run: "python -m pip install --upgrade pip wheel"

      - name: "Install Nox"
        run: "python -m pip install nox"

      - name: "Run tests (via Nox) on Python ${{ matrix.python-version }}"
        run: "nox -s tests --python ${{ matrix.python-version }}"
        env:
          VCRPY_ENCRYPTION_KEY: "${{ secrets.VCRPY_ENCRYPTION_KEY }}"

      - name: "Upload coverage data"
        uses: "actions/upload-artifact@v4"
        with:
          name: "coverage-data-${{ matrix.python-version }}"
          path: ".coverage.*"
          if-no-files-found: "ignore"
          include-hidden-files: true

  coverage:
    name: "Coverage report"
    runs-on: "ubuntu-latest"
    needs: "tests"

    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - name: "Setup Python ${{ env.PYTHON_VERSION }}"
        uses: "actions/setup-python@v5"
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: "Update pip and wheel"
        run: "python -m pip install --upgrade pip wheel"

      - name: "Install Nox"
        run: "python -m pip install nox"

      - uses: "actions/download-artifact@v4"
        with:
          pattern: "coverage-data-*"
          merge-multiple: "true"

      - name: "Combine coverage (via Nox)"
        run: "nox -s coverage_report"

      - name: "Upload coverage reports to Codecov"
        uses: "codecov/codecov-action@v4"
        with:
          files: "coverage.xml"
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"

  checks:
    name: "${{ matrix.name }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        include:
          - name: "Code style checks"
            nox_session: "code_style_checks"
          - name: "Type checks"
            nox_session: "type_checks"
          - name: "Docs"
            nox_session: "docs"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - name: "Setup Python ${{ env.PYTHON_VERSION }}"
        uses: "actions/setup-python@v5"
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: "Update pip and wheel"
        run: "python -m pip install --upgrade pip wheel"

      - name: "Install Nox"
        run: "python -m pip install nox"

      - name: "Run '${{ matrix.nox_session }}' Nox session"
        run: "nox -s ${{ matrix.nox_session }}"
